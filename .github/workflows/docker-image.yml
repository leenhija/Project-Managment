name: CI/CD React App

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: react-app

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18   

    - name: Install dependencies
      run: npm install
      working-directory: ${{ github.workspace }}/Project

    - name: Build React app
      run: npm run build
      working-directory: ${{ github.workspace }}/Project

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: react-build
        path: Project/dist

  build:
    runs-on: ubuntu-latest
    needs: package
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: react-build
        path: Project/dist

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image (with React app)
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/react-app:latest Project

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker stop react-app || true
          docker rm react-app || true
          docker run -d -p 80:80 --name react-app ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
